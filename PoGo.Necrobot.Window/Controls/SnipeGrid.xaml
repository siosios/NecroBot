<UserControl x:Class="PoGo.Necrobot.Window.Controls.SnipeGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PoGo.Necrobot.Window.Controls"
             xmlns:behaviors="clr-namespace:PoGo.Necrobot.Window.Behaviors"
             xmlns:c="clr-namespace:PoGo.Necrobot.Window.Converters"
             xmlns:my="http://schemas.microsoft.com/wpf/2008/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="200" d:DesignWidth="900">
    <Control.Resources>
        <c:PokemonImageConverter x:Key="PokemonImageConverter"/>
        <c:I18NConveter x:Key="I18NConveter"/>
        <c:HeaderFilterConverter x:Key="HeaderFilterConverter"/>
        <Style TargetType="{x:Type my:DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type my:DataGridColumnHeader}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="ShowFilterControl">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="filterTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="filterTextBox" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                    <SplineColorKeyFrame KeyTime="00:00:00" Value="Transparent"/>
                                    <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HideFilterControl">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="filterTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="filterTextBox" Storyboard.TargetProperty="(UIElement.OpacityMask).(SolidColorBrush.Color)">
                                    <SplineColorKeyFrame KeyTime="00:00:00" Value="Black"/>
                                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <my:DataGridHeaderBorder x:Name="dataGridHeaderBorder" Margin="0" VerticalAlignment="Top" Height="31" IsClickable="{TemplateBinding CanUserSort}" IsHovered="{TemplateBinding IsMouseOver}" IsPressed="{TemplateBinding IsPressed}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" SortDirection="{TemplateBinding SortDirection}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.ColumnSpan="1">
                            <Grid x:Name="grid" Width="Auto" Height="Auto">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="contentPresenter"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                    ContentTemplate="{TemplateBinding ContentTemplate}">
                                    <ContentPresenter.Content>
                                        <MultiBinding Converter="{StaticResource HeaderFilterConverter}">
                                            <MultiBinding.Bindings>
                                                <Binding ElementName="filterTextBox" Path="Text" />
                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Content" />
                                            </MultiBinding.Bindings>
                                        </MultiBinding>
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                                <TextBox x:Name="filterTextBox" HorizontalAlignment="Right" MinWidth="25" Height="Auto" OpacityMask="Black" Visibility="Collapsed" Text="" TextWrapping="Wrap" Grid.Column="0" Grid.ColumnSpan="1"/>
                            </Grid>
                        </my:DataGridHeaderBorder>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="ShowFilterControl_BeginStoryboard" Storyboard="{StaticResource ShowFilterControl}"/>
                                    <StopStoryboard BeginStoryboardName="HideFilterControl_BeginShowFilterControl"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="HideFilterControl_BeginShowFilterControl" Storyboard="{StaticResource HideFilterControl}"/>
                                    <StopStoryboard BeginStoryboardName="ShowFilterControl_BeginStoryboard"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Control.Resources>
    <DataGrid ItemsSource="{Binding Mode=OneWay}" 
              AutoGenerateColumns="false" 
              GridLinesVisibility="None"
              IsReadOnly="True"
              behaviors:DataGridBehavior.DisplayRowNumber="True"
              FontFamily="pack://application:,,,/Resources/Fonts/#Lato" FontWeight="Medium">
        <DataGrid.Columns>
            <DataGridTextColumn Binding="{Binding Path=Id}" Header="#" IsReadOnly="True"/>
            <DataGridTemplateColumn Header="#">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <Image Width="30" Source="{Binding Path=PokemonId, Converter={StaticResource PokemonImageConverter}}" />
                        </StackPanel>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTextColumn Binding="{Binding Path=PokemonName}" Header="{Binding Source=PokemonName, Converter= {StaticResource I18NConveter}}" IsReadOnly="True" MinWidth="100" >
                <DataGridTextColumn.ElementStyle>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Recommend}" Value="True">
                                <Setter Property="Background" Value="Green"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>
            <DataGridTextColumn Binding="{Binding Path=IV, StringFormat={}{0:0.00}}" Header="{Binding Source=IV, Converter= {StaticResource I18NConveter}}" IsReadOnly="True" MinWidth="60">
                <DataGridTextColumn.ElementStyle>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Recommend}" Value="True">
                                <Setter Property="Background" Value="Green"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>
            <DataGridTextColumn Binding="{Binding Path=Level}" Header="{Binding Source=Level, Converter= {StaticResource I18NConveter}}" IsReadOnly="True"/>
            <DataGridTextColumn Binding="{Binding Path=Latitude}" Header="{Binding Source=Latitude, Converter= {StaticResource I18NConveter}}" IsReadOnly="True"/>
            <DataGridTextColumn Binding="{Binding Path=Longitude}" Header="{Binding Source=Longitude, Converter= {StaticResource I18NConveter}}" IsReadOnly="True"/>
            <DataGridTextColumn Binding="{Binding Path=Move1}" Header="{Binding Source=Move1, Converter= {StaticResource I18NConveter}}" IsReadOnly="True"/>
            <DataGridTextColumn Binding="{Binding Path=Move2}" Header="{Binding Source=Move2, Converter= {StaticResource I18NConveter}}" IsReadOnly="True"/>
            <DataGridTextColumn Binding="{Binding Path=Verified, StringFormat={}{0}}" Header="{Binding Source=Verified, Converter= {StaticResource I18NConveter}}" IsReadOnly="True"/>
            <DataGridTextColumn Binding="{Binding Path=RemainTimes, StringFormat={}{0:000}s}" Header="{Binding Source=RemainTime, Converter= {StaticResource I18NConveter}}" IsReadOnly="True"/>
            <DataGridTemplateColumn Header="{Binding Source=SnipeButton, Converter={StaticResource I18NConveter}}">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Button IsEnabled="{Binding Path=AllowSnipe}" Content="{Binding Source=SnipeText, Converter= {StaticResource I18NConveter}}" CommandParameter="{Binding Ref}" Click="Snipe_Click"/>
                            <Button Margin="10,0,0,0" IsEnabled="{Binding Path=AllowSnipe}" Content="{Binding Source=SnipeAllBotText, Converter= {StaticResource I18NConveter}}" CommandParameter="{Binding Ref}" Click="SnipeAll_Click"/>
                        </StackPanel>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
        </DataGrid.Columns>
    </DataGrid>
</UserControl>
